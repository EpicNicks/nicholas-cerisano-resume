{"version":3,"sources":["media/images/glitch garden demo gif.gif","media/images/infinite-runner clip.gif","media/images/MyPhoto.jpg","media/videos/sample coding clip.mp4","scripts/navbar/NavButton.tsx","scripts/navbar/NavBar.tsx","scripts/bottom bar/BottomBar.tsx","scripts/components/VideoPlayer.tsx","scripts/pages/home-page/Home.tsx","scripts/pages/resume-page/Resume.tsx","scripts/pages/project-page/Sidebar/SideButton.tsx","scripts/pages/project-page/Sidebar/Sidebar.tsx","scripts/pages/project-page/ProjectComponents/SpaceShooter.tsx","scripts/pages/project-page/ProjectComponents/GlitchGarden.tsx","scripts/pages/project-page/ProjectComponents/GameDay.tsx","scripts/pages/project-page/ProjectComponents/Infinite Runner.tsx","scripts/pages/project-page/ProjectComponents/Portfolio.tsx","scripts/pages/project-page/Projects.tsx","scripts/pages/about-page/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavButton","href","window","location","split","className","this","props","id","includes","length","onClick","navBar","setActiveStateId","setState","activeBtn","text","Component","activeStateId","NavBar","state","navBtns","getActiveStateId","to","BottomBar","size","target","rel","VideoPlayer","video","document","querySelector","playbackRate","url","require","loop","muted","data-reactid","autoPlay","type","src","Home","Resume","SideButton","Sidebar","unityBuildDirPath","process","unityBuildJsonPath","unityLoaderPath","SpaceShooter","unityContent","UnityContent","game","ref","GlitchGarden","alt","GameDay","InfiniteRunner","Portfolio","createBrowserHistory","DefaultPage","Projects","exact","path","component","About","App","basename","from","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9a5f527.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/glitch garden demo gif.aebb97e8.gif\";","module.exports = __webpack_public_path__ + \"static/media/infinite-runner clip.f6adb8ce.gif\";","module.exports = __webpack_public_path__ + \"static/media/MyPhoto.9668dd11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sample coding clip.b0fb19f0.mp4\";","\r\nimport { Component } from 'react';\r\nimport React from 'react';\r\nimport { NavBar } from \"./NavBar\";\r\n\r\ninterface IProps {\r\n    text: string,\r\n    navBar: NavBar,\r\n    id: Array<string>,\r\n}\r\ninterface IState {}\r\n\r\nexport class NavButton extends Component<IProps, IState>{\r\n\r\n    render(){\r\n        let href = window.location.href.split('/');\r\n        let className = this.props.id.includes(href[href.length - 1]) ? \"ActiveNavBtn\" : \"NavButton\";\r\n        return(\r\n            <div\r\n                className={className}\r\n                onClick={()=> {\r\n                    this.props.navBar.setActiveStateId(this.props.id[0]);\r\n                    this.props.navBar.setState({activeBtn: this});\r\n                }}\r\n            >\r\n                { this.props.text }\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport { Link } from \"react-router-dom\";\r\nimport { Component } from 'react';\r\nimport React from 'react';\r\n\r\nimport { NavButton } from \"./NavButton\";\r\n\r\n\r\nimport \"./NavBar.css\";\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\ninterface IState {\r\n    activeBtn: NavButton | null,\r\n    navBtns: Array<NavButton>\r\n}\r\n\r\nlet activeStateId: string | null = null;\r\n\r\nexport class NavBar extends Component<IProps, IState>{\r\n\r\n    state = {\r\n        activeBtn: null,\r\n        navBtns: [] as NavButton[]\r\n    };\r\n\r\n    constructor(props: Readonly<IProps>){\r\n        super(props);\r\n        if(activeStateId === null) {\r\n            activeStateId = 'home';\r\n        }\r\n    }\r\n\r\n    setActiveStateId = (id : string) => activeStateId = id;\r\n    getActiveStateId = () : string | null => activeStateId;\r\n\r\n    componentDidMount(): void {\r\n        if(this.state.activeBtn === null){\r\n            this.setState({activeBtn: this.state.navBtns[0], navBtns: this.state.navBtns});\r\n        }\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n\r\n        return(\r\n            <div className=\"NavBar\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">\r\n                            <NavButton text=\"Home\" id={[\"\",\"home\"]} navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\">\r\n                            <NavButton text=\"About\" id={[\"about\"]} navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/resume\">\r\n                            <NavButton text=\"Resume\" id={[\"resume\"]} navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects\">\r\n                            <NavButton text=\"Projects\" id={[\"projects\"]} navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { FaLinkedin, FaGithub, MdContactMail, MdContactPhone } from \"react-icons/all\";\r\nimport './BottomBar.css';\r\n\r\nexport class BottomBar extends Component{\r\n\r\n    render(){\r\n        const iconSize : number = 50;\r\n\r\n        return (\r\n            <div className=\"BottomBar\">\r\n                <div className=\"BottomBarTitle\">\r\n                    Contact Me\r\n                </div>\r\n                <div className=\"BottomBarIcons\">\r\n                    <div className=\"IconBundle\">\r\n                        <MdContactMail className=\"Email\" size={iconSize} />\r\n                        epicnicks2.0@gmail.com\r\n                    </div>\r\n                    <div className=\"IconBundle\">\r\n                        <MdContactPhone className=\"Phone\" size={iconSize} />\r\n                        416-556-4060\r\n                    </div>\r\n                    <a href=\"https://www.linkedin.com/in/nicholas-cerisano-53a389173/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FaLinkedin className=\"LinkedIn\" size={iconSize} />\r\n                    </a>\r\n                    <a href=\"https://github.com/epicnicks\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FaGithub className=\"Github\" size={iconSize} />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n//import ReactPlayer from \"react-player\";\r\nimport React, { Component } from 'react';\r\n\r\nexport class VideoPlayer extends Component{\r\n\r\n    componentDidMount(): void {\r\n        const video = document.querySelector(\"video\");\r\n        if(video !== null)\r\n            video.playbackRate = 10.0;\r\n    }\r\n\r\n    render(){\r\n        const url = require(\"D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\videos\\\\sample coding clip.mp4\");\r\n        return(\r\n            <div className=\"VideoContainer\">\r\n                <div className=\"VideoPlayer\">\r\n                    <video\r\n                        className=\"video-container video-container-overlay\"\r\n                        loop={true}\r\n                        muted={false}\r\n                        data-reactid=\".0.1.0.0\"\r\n                        autoPlay\r\n                    >\r\n                        <source type=\"video/mp4\" data-reactid=\".0.1.0.0.0\" src={url}/>\r\n                    </video>\r\n                </div>\r\n                <p>\r\n                    About Nicholas Cerisano\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n<ReactPlayer\r\nurl={url}\r\nplaying\r\nloop={true}\r\nwidth=\"80%\"\r\nheight=\"80%\"\r\n/>\r\n */\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { VideoPlayer } from \"../../components/VideoPlayer\";\r\nimport \"./Home.css\";\r\n//import { ContactBar } from \"../../contact-bar/ContactBar\";\r\n\r\nexport class Home extends Component{\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        return(\r\n            <div className=\"Home\">\r\n                {/*<p>*/}\r\n                {/*    Home page*/}\r\n                {/*</p>*/}\r\n                <VideoPlayer/>\r\n                {/*<ContactBar/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './Resume.css';\r\n\r\nexport class Resume extends Component{\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        return(\r\n            <div className=\"Resume\">\r\n                <h1>\r\n                    Resume page\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport {NavBar} from \"../../../navbar/NavBar\";\r\nimport {NavButton} from \"../../../navbar/NavButton\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nimport \"./Sidebar.css\";\r\n\r\ninterface IProps {\r\n    text: string,\r\n    navBar: Sidebar,\r\n    id: string,\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class SideButton extends Component<IProps, IState>{\r\n\r\n    render(){\r\n        let href = window.location.href.split('/');\r\n        let className = href[href.length - 1] === this.props.id ? \"ActiveSideButton\" : \"SideButton\";\r\n        return(\r\n            <div className={className + \" \" + href[href.length - 1]/*this is used to differentiate css colors*/}\r\n                 onClick={()=> {\r\n                     this.props.navBar.setActiveStateId(this.props.id);\r\n                     this.props.navBar.setState({activeBtn: this});\r\n                 }}\r\n            >\r\n                { this.props.text }\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Link, Route } from 'react-router-dom'\r\nimport {SideButton} from \"./SideButton\";\r\nimport {NavButton} from \"../../../navbar/NavButton\";\r\n\r\nimport \"./Sidebar.css\";\r\n\r\ninterface IProps {}\r\ninterface IState {\r\n    activeBtn: SideButton | null,\r\n    navBtns: Array<SideButton>\r\n}\r\n\r\nlet activeStateId: string | null = null;\r\n\r\nexport class Sidebar extends Component<IProps, IState>{\r\n\r\n    state = {\r\n        activeBtn: null,\r\n        navBtns: [] as SideButton[]\r\n    };\r\n\r\n    setActiveStateId = (id : string) => activeStateId = id;\r\n    getActiveStateId = () : string | null => activeStateId;\r\n\r\n    constructor(props: Readonly<IProps>){\r\n        super(props);\r\n        if(activeStateId === null)\r\n            activeStateId = 'home';\r\n        else{\r\n            let href = window.location.href.split('/');\r\n            activeStateId = href[href.length - 1];\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"SideBar\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/projects\">\r\n                            <SideButton text=\"Projects Home\" id=\"projects\" navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects/space-shooter\">\r\n                            <SideButton text=\"Space Shooter\" id=\"space-shooter\" navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects/glitch-garden\">\r\n                            <SideButton text=\"Glitch Garden\" id=\"glitch-garden\" navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects/game-day\">\r\n                            <SideButton text=\"Game Day\" id=\"game-day\" navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects/infinite-runner\">\r\n                            <SideButton text=\"Infinite Runner\" id=\"infinite-runner\" navBar={this}/>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects/portfolio\">\r\n                            <SideButton text=\"Portfolio\" navBar={this} id=\"portfolio\"/>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Unity, { UnityContent } from 'react-unity-webgl';\r\n\r\nconst unityBuildDirPath = process.env.PUBLIC_URL + '/unity/space-shooter/Build/';\r\nconst unityBuildJsonPath = unityBuildDirPath + 'SpaceInvadersClone_HTML5.json';\r\nconst unityLoaderPath = unityBuildDirPath + 'UnityLoader.js';\r\n\r\nexport class SpaceShooter extends Component{\r\n\r\n    private unityContent = new UnityContent(\r\n        unityBuildJsonPath,\r\n        unityLoaderPath\r\n    );\r\n\r\n    private game : Unity | null = null;\r\n\r\n    // kill unity instance (crappy method but it works -_(._.)_- )\r\n    // componentWillUnmount(): void {\r\n    //     if(this.game !== null) {\r\n    //         let path : string = window.location.pathname;\r\n    //         window.location.assign('/nicholas-cerisano-resume');\r\n    //         if(document.readyState === 'interactive') {\r\n    //             window.location.assign(path);\r\n    //             window.onload = null;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"SpaceShooter\">\r\n                <h1>\r\n                    Space Shooter\r\n                </h1>\r\n                <p>\r\n                    This is a project I worked on following the Udemy course: Complete Unity C# Developer: Learn to code by making games\r\n                    I later designed it around being played on a phone.\r\n                    Feel free to give it a try below by clicking &lt;Start&gt;.<br/><br/>\r\n                    Controls: Move the mouse; your ship (bottom) will move toward it along the horizontal axis.\r\n                </p>\r\n                <Unity className=\"Unity_SpaceShooter\" unityContent={this.unityContent} ref={game => this.game = game}/>\r\n                {/*{<img*/}\r\n                {/*    src={require(\"D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\space shooter demo gif.gif\")}*/}\r\n                {/*    alt={require(\"D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\space shooter screenshot.jpg\")}*/}\r\n                {/*/>}*/}\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Unity, { UnityContent } from 'react-unity-webgl';\r\n\r\nconst unityBuildDirPath = process.env.PUBLIC_URL + '/unity/glitch-garden/Build/';\r\nconst unityBuildJsonPath = unityBuildDirPath + 'GlitchGarden_HTML5.json';\r\nconst unityLoaderPath = unityBuildDirPath + 'UnityLoader.js';\r\n\r\nexport class GlitchGarden extends Component{\r\n\r\n    unityContent = new UnityContent(\r\n        unityBuildJsonPath,\r\n        unityLoaderPath\r\n    );\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"GlitchGarden\">\r\n                <h1>\r\n                    Glitch Garden\r\n                </h1>\r\n                <p>\r\n                </p>\r\n                {/*not enough memory (crashes)*/}\r\n                {/*<Unity className=\"Unity_GlitchGarden\" unityContent={this.unityContent}/>*/}\r\n                <img\r\n                    src={require(\"D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\glitch garden demo gif.gif\")}\r\n                    alt={require(\"D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\glitch garden demo gif.gif\")}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nexport class GameDay extends Component{\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        return(\r\n            <div className=\"GameDay\">\r\n                <h1>\r\n                    Game Day\r\n                </h1>\r\n                <img\r\n                    // src={require(\"\")}\r\n                    // alt={require(\"\")}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\nimport React , { Component } from 'react';\r\nimport Unity, { UnityContent } from 'react-unity-webgl';\r\n\r\nconst unityBuildDirPath = process.env.PUBLIC_URL + '/unity/infinite-skater/Build/';\r\nconst unityBuildJsonPath = unityBuildDirPath + 'InfiniteSkater_HTML5.json';\r\nconst unityLoaderPath = unityBuildDirPath + 'UnityLoader.js';\r\n\r\nexport class InfiniteRunner extends Component {\r\n\r\n    private unityContent = new UnityContent(\r\n        unityBuildJsonPath,\r\n        unityLoaderPath\r\n    );\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        return(\r\n            <div className=\"InfiniteRunner\">\r\n                <h1>\r\n                    Infinite Runner\r\n                </h1>\r\n                <img\r\n                    src={require('D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\infinite-runner clip.gif')}\r\n                    alt={require('D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\infinite-runner clip.gif')}\r\n                />\r\n                {/*Not enough memory...*/}\r\n                {/*<Unity className=\"Unity_InfiniteRunner\" unityContent={this.unityContent} ref={game => this.game = game}/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nexport class Portfolio extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"PortfolioProject\">\r\n                <h1>\r\n                    This Portfolio\r\n                </h1>\r\n                <p>\r\n                    I built this website myself in React using TypeScript.<br/>\r\n                    You can check out the code on my GitHub using the GitHub icon in the 'Contact Me' bar below, or by\r\n                    clicking <a href=\"https://github.com/epicnicks\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.<br/>\r\n                </p>\r\n                <img\r\n                    //get an image of the finished homepage\r\n                    //src={}\r\n                    //alt={}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch,} from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport './Projects.css';\r\n\r\n///#region Component imports\r\nimport { Sidebar } from \"./Sidebar/Sidebar\";\r\n\r\nimport { SpaceShooter } from \"./ProjectComponents/SpaceShooter\";\r\nimport { GlitchGarden } from \"./ProjectComponents/GlitchGarden\";\r\nimport { GameDay } from \"./ProjectComponents/GameDay\";\r\nimport { InfiniteRunner } from \"./ProjectComponents/Infinite Runner\";\r\nimport { Portfolio } from \"./ProjectComponents/Portfolio\";\r\n///#endregion\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction DefaultPage() {\r\n    return(\r\n        <div className=\"ProjectDefault\">\r\n            <h1>\r\n                Welcome to the Project Page.\r\n            </h1>\r\n            <h3>\r\n                Feel free to click on the sidebar buttons to get a look at some of my\r\n                personal projects.\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport class Projects extends Component{\r\n\r\n    //add in a scrolling sidebar to navigate different project-page\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        return(\r\n            <div className=\"Projects\">\r\n                {/*<Router history={history}>*/}\r\n                    <Sidebar/>\r\n                    <Switch>\r\n                        <Route exact path=\"/projects/space-shooter\" component={SpaceShooter}/>\r\n                        <Route exact path=\"/projects/glitch-garden\" component={GlitchGarden}/>\r\n                        <Route exact path=\"/projects/game-day\" component={GameDay}/>\r\n                        <Route exact path=\"/projects/infinite-runner\" component={InfiniteRunner}/>\r\n                        <Route exact path=\"/projects/portfolio\" component={Portfolio}/>\r\n                        <Route exact path=\"/projects\" component={DefaultPage}/>\r\n                        <Route component={DefaultPage}/>\r\n                    </Switch>\r\n                {/*</Router>*/}\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './About.css';\r\n\r\nexport class About extends Component{\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        return(\r\n            <div className=\"About\">\r\n                <h1>\r\n                    About Me\r\n                </h1>\r\n                <div className=\"About-Main\">\r\n                    <div className=\"About-Image\">\r\n                        <img\r\n                            //placeholder photo\r\n                            src={require(\"D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\MyPhoto.jpg\")}\r\n                            alt={require(\"D:\\\\JetBrains Projects\\\\WebstormProjects\\\\nicholas-cerisano-portfolio\\\\src\\\\media\\\\images\\\\MyPhoto.jpg\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"About-Body\">\r\n                        <h2>\r\n                            Bio\r\n                        </h2>\r\n                        <p>\r\n                            I am a second-year Computer Science student attending York University.<br/>\r\n                            I spend most of my spare time programming for fun.\r\n                        </p>\r\n                        <h2>\r\n                            Hobbies\r\n                        </h2>\r\n                        <p>\r\n\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport { NavBar } from \"./scripts/navbar/NavBar\";\r\nimport {Router, Route, Redirect, Switch, HashRouter} from 'react-router-dom';\r\nimport {createBrowserHistory} from \"history\";\r\n\r\nimport { BottomBar } from \"./scripts/bottom bar/BottomBar\";\r\n\r\n//#region Routes\r\nimport { Home } from './scripts/pages/home-page/Home';\r\nimport { Resume } from \"./scripts/pages/resume-page/Resume\";\r\nimport { Projects } from './scripts/pages/project-page/Projects';\r\nimport { About } from \"./scripts/pages/about-page/About\";\r\n//#endregion\r\n\r\n// const history = createBrowserHistory({\r\n//     basename: process.env.PUBLIC_URL,\r\n// });\r\n\r\nclass App extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n                <HashRouter basename={''}>\r\n                    <NavBar/>\r\n                        <Switch>\r\n                            <Route exact path=\"/home\" component={Home}/>\r\n                            <Route exact path=\"/about\" component={About}/>\r\n                            <Route exact path=\"/resume\" component={Resume}/>\r\n                            <Route path=\"/projects\" component={Projects}/>\r\n                            <Redirect from={\"/\"} to={\"/home\"}/>\r\n                        </Switch>\r\n                    <BottomBar/>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//Polyfills\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js/features/array/find';\r\nimport 'core-js/features/array/includes';\r\nimport 'core-js/features/number/is-nan';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}